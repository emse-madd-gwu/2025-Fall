---
title: "Data Wrangling"
params:
  number: 1
  purpose: 'The purpose of this assignment is to get more familiar with R and RStudio and to develop some basic strategies for working with data in R.'
---

```{r child = here::here("fragments", "hw.qmd")}
```

# 1. Software

If you haven't yet, go to the [Software](../software.html) page and install all the software we'll need for this course. You'll need these tools for this assignment.

# 2. Getting Organized

Download and edit [this template](`r url_template`) when working through this assignment. This is for now mostly a blank file that you can use to jot down examples and play with code.

# 3. Readings

Open up a notebook (physical, digital...whatever you take notes in best), and **take notes** while you go through these readings:

1. **Getting Familiar with the Course**: Follow [Snoop's advice](https://www.youtube.com/watch?v=Tnlaokj1opA) and read the entire [Course Syllabus](../syllabus.html) (actually read the whole thing). Then review the [schedule](../schedule.html) and make sure to note important upcoming deadlines.
2. **{{< fa brands r-project>}} Basics** [Optional] Read through Lessons [1 "Getting Started"](https://jhelvy.github.io/r4aPrimer/L1-getting-started.html) and [2 "Data Types & Vectors"](https://jhelvy.github.io/r4aPrimer/L2-data-types-vectors.html) in the [R4A Primer](https://jhelvy.github.io/r4aPrimer/index.html) to get more familiar with {{< fa brands r-project>}} basics.
3. **Data Frames & Data Wrangling** Reading through Lessons [3 "Data Frames"](https://jhelvy.github.io/r4aPrimer/L3-data-frames.html) and [4 "Data Wrangling"](https://jhelvy.github.io/r4aPrimer/L4-data-wrangling.html) in the [R4A Primer](https://jhelvy.github.io/r4aPrimer/index.html) to get more familiar with working with data sets in {{< fa brands r-project>}}.

# 4. Exercises

Posit offers many excellent [recipes](https://posit.cloud/learn/recipes) for implementing lots of common things in {{< fa brands r-project>}}. Running through these exercises will help prepare you for class next week. 

Pick at least 3 recipes under "Transform Tables" and "Visualize Data" (so 6 total) and try implementing them yourself. Ideally you could try even more.

# 5. Reflect

Reflect on what you've learned while going through these readings and exercises. Is there anything that jumped out at you? Anything you found particularly interesting or confusing? Write at least a paragraph in your `hw1.R` file, and include at least one question. The teaching team will review the questions we get and will try to answer them either in Slack or in class.

If you're unsure where to start with a reflection, try filling out this template:

> "I used to think ______, now I think ______ ðŸ¤”"

# 6. Submit

To submit your assignment, create a zip file of all the files in your R project folder for this assignment and submit it on the corresponding assignment submission on Blackboard.

----

# Extra Practice

Not required, but probably helpful, especially if you're new to {{< fa brands r-project>}}.

## Inspect data from other packages

Write R code to install the **dslabs** package from CRAN, then write code to load the library. Write some code to preview and inspect the `movielens` data frame that gets loaded when you load the library using some of the techniques we saw in class. For each of the following questions, write code to find your answer and leave a detailed response in a comment:

- What is this dataset about?
- How many observations are in the data frame?
- What is the original source of the data?
- What type of data is each variable?
- What are the years of the earliest and most recent observations in the data set?

## Answer questions about the data

For each of the following questions, write code to find your answer and leave a detailed response in a comment:

- What is the min, mean, and max rating in the data set?
- How many observations received the maximum rating?
- What percentage of total observations received the maximum rating?
- What is the title of the observation with the longest `title` (in terms of numbers of letters in the title)?

## Installing packages from Github: the **BRRR** library

The vast majority of the time, you will install external packages using the `install.packages()` function. This installs packages from the [Comprehensive R Archive Network](https://cran.r-project.org/) (CRAN), where most packages are published. But you can also install packages that are under development or haven't been published to CRAN yet. Most of the time, these packages are hosted on GitHub - an online platform for sharing code (it's also where all of the files that make up this website are [stored](https://github.com/emse-madd-gwu/2022-Fall)).

To install a package from GitHub, you first need to install the **remotes** library. Then you can use the `remotes`::install_github()` function to install packages directly from GitHub. To try this out, install the **remotes** library, then trying installing the **BRRR** package:

```{r, eval=FALSE}
remotes::install_github("brooke-watson/BRRR")
```

::: {.callout-note}

Packages on GitHub are _in development_ and often require other packges to work. So if you get an installation error about some other package dependency, try restarting your R session and try again.

:::

Not sure what this package does? Well, one of the other nice things about packages listed on GitHub is the authors tend to write detailed descriptions - check out the [GitHub page for the BRRR package](https://github.com/brooke-watson/BRRR). Then try using the `BRRR::skrrrahh()` function with different number arguments (turn your volume up). In the `#welcome` channel on slack, post your favorite argument to `skrrrahh()` (mine is 24).
